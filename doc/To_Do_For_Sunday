1. Add the errors to be thrown when checking arguments passed to methods
2. Talk about the use of boolean empty in Cell and the isEmpty function and how we want to deal with empty cells.
    * We could create an Empty state in the enums - I like how Dima used this in Segregation cell I think it might be
    the way to go
        * Pros: Don't need a new kind of cell, easy to right is empty function for all cells
        * Cons: Need to add an empty state for each of the simulations that support empty cells
            * This con may be unavoidable so it may be worth it
    * We could use an empty boolean flag
3. Can we delete the GamePlayer class now?  It was more just for getting started
4. Anna, how do we actually make the simulation happen? Do we ever actually use the .simulate() methods or just
updateGrid? If we don't use .simulate() we should get rid of the methods
5. What role are the simulation classes actually serving? Should we get rid of them. If not, comment and clean up
6. Attribute the sources we used such as Grid WatorShark, WatorFish, WatorCell, Location
7. Authors of the files?
8. More thorough commenting
9. Implement getMyColor and toString in the Cell class because they are literally all the same (except Wator for now)
    * Changed Wator so in the same format - now I think we can delete these methods in the classes and just use the Cell
     superclass
10. Implement PercolationSimulation isOver method (sorry)
11. Evaluate if we need Enum getMyFullState()
12. Should parameters be static?
13. Do we want to delete Tester? Do we need it anymore?
14.




--------------------------------------What is the role of Simulation------------------------------------------------
1. Simulation may be more valuable for Wator and Segregation because some parameters such as % fish or % empty are more
simulation-level parameters than cell-level parameters (in my head), these parameters are also important when
initializing the grid which is done by the simulation
